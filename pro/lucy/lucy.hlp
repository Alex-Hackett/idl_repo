    The Lucy task generates a restored image from an input image and point
    spread function (PSF) using the algorithm developed independently by
    Lucy (1974, Astron. J. 79, 745) and Richardson (1972, J.  Opt.  Soc.
    Am.   62,  55)  and  adapted  for  HST  imagery  by Snyder (1990, in
    Restoration of HST Images and Spectra, ST ScI Workshop  Proceedings;
    see  also Snyder, Hammoud, & White, JOSA, v. 10, no. 5, May 1993, in
    press).  Additional options developed  by  Rick  White  (STScI)  are
    also included.
    
    The   Lucy-Richardson   method  can  be  derived  from  the  maximum 
    likelihood expression for data with a  Poisson  noise  distribution.
    Thus,  it  naturally  applies  to  optical imaging data such as HST.
    The method forces the restored image to be positive, in accord  with
    photon-counting statistics.
    
    The  Lucy-Richardson algorithm generates a restored image through an
    iterative method.  The essence of the iteration is as follows:   the
    (n+1)th  estimate of the restored image is given by the nth estimate
    of the restored image multiplied by a correction image.  That is,
    
    
                               original data
          image    = image    ---------------  * reflect(PSF)
               n+1        n     image * PSF
                                     n
    
    where the *'s represent convolution operators  and  reflect(PSF)  is
    the  reflection  of  the PSF, i.e. reflect((PSF)(x,y)) = PSF(-x,-y).
    When the convolutions are carried out using fast Fourier  transforms
    (FFTs),   one   can   use   the   fact   that   FFT(reflect(PSF))  = 
    conj(FFT(PSF)), where conj is the complex conjugate operator.
    
    You can specify  a  model  image  to  be  used  if  you  have  prior
    information  about the image.  Normally, the model image is simply a
    constant value image whose value is the mean of the input data.
    
    The restored data will be properly normalized,  and  the  integrated
    flux  in  the  image  is conserved.  The total flux for a particular
    object should also be conserved.
    
    Snyder's modification to the algorithm includes effects of  additive
    noise  (e.g., CCD read-out noise) of the detector, which is added to
    both the numerator and denominator in the above equation.   Additive
    noise  is  specified  by  the  'noise' parameter, and the convertion 
    factor  between electrons and data numbers is specified by the 
    Electrons/DN parameter.
    
    If the data were generated by averaging or  summing  several  images
    then  the noise and Electrons/DN parameters must be modified.  For 
    either the sum or average  of  N  equal  exposures  the  noise parameter
    should  be  sqrt(N) times the noise for a single image.  For the sum
    of N equal exposures the Electrons/DN  is  the  same  as  for  a
    single  image,  while for the average of N equal exposures the 
    Electrons/DN should be set to N times the normal value  for  a  single
    exposure.
    
    Note  that when the readout noise is non-zero, the flux in the image
    is no longer conserved exactly.  This  is  appropriate  because  the
    best  estimate  of  the total flux in an image with readout noise is
    not simply the sum of all the data pixels, but rather is a sum  with
    the  noisy  pixels  near  zero  counts weighted less than the pixels
    well above the readout noise.
    
    You can specify both the number of iterations  to  be  run  and  the
    limiting   reduced  chi-squared.   The  program  will  stop  if  the 
    chi-squared  reaches  the  specified  limit,  or  if   the   maximum 
    iteration  count  is  reached.   Reaching  a chi-squared of 1 is one
    measure of convergence, but should not be taken too literally.   The
    chi-squared   only   measures  the  overall  agreement  between  the 
    restored image and the data, and  does  not  reflect  situations  in
    which  low-level  noise  backgrounds  or  smooth,  broad objects are
    over-fit (e.g., with noise  amplification)  and  high-level  sources
    are   not  completely  restored.   
    
    If you specify a high number of iterations, you can cause  artifacts
    to  be formed in the restored frame.  These artifacts are the result
    of  building  noise  spikes  into   apparent   sources,   or   noise 
    amplification.   For some images, such as images of star fields, the
    iteration may  be  continued  for  hundreds  or  even  thousands  of
    iterations  without introducing objectionable noise amplification in
    the restored frame.   On  the  other  hand,  for  images  with  very
    diffuse,  extended  emission, such as comets, even 50 iterations can
    lead to noisy restorations.
    
    The question of when to stop the iteration is  especially  difficult
    when  the  readout  noise is included.  In that case the convergence
    of the iteration is somewhat uneven: brighter objects converge  more
    quickly  to  their  ultimate  shapes  and brightnesses than do faint
    objects.  The convergence slows  below  a  brightness  threshold  of
    noise**2/adu  counts.  (The worst case is one in which one has 
    averaged many images together.  In that case you can have high
    signal-to-noise regions of the image that fall well below the
    threshold and that take many iterations to converge.)  You might
    therefore like to stop the iterations in some parts of the image 
    while continuing to iterate in other regions.  This may be done by
    the use of the damping option.
    
    Note  that  the  Lucy-Richardson technique forces all data values in
    the restored  frame  to  be  positive,  and  performs  best  if  the
    background  data  values  are  close  to  zero.   Achieving the best
    results with this technique requires some preparation  of  the  data
    frame:
    
    1)  Remove  any  strong DC offset from the frame by fitting a smooth
    background function or subtracting a constant value.  Add this  back
    after  restoration  if  you  consider  it  important  for subsequent
    analysis.  Failure to do this can lead to the formation of  circular
    `holes' around strong point sources.  The background parameter on the
    load form allows you to  specify  either  a  constant  background
    value  or a background image that has been subtracted from the input
    image.  These are required in order for  the  task  to  compute  the
    Poisson  noise  statistics  properly.  In the iteration process, the
    background is another  additive  term  in  both  the  numerator  and
    denominator of the equation above.
    
    2)  Flag  or repair any blatantly bad pixels (data drop-outs, cosmic
    ray hits).  Failure to do this can introduce  artifacts  around  the
    flawed  pixels.  Pixels may be masked by including the mask file in
    the load form where it is assumed that good pixels have the value of
    1.

    The restoration can be computed on a data grid which extends  beyond
    the  input  data.  This is important if there are any strong sources
    near the edge of the image, or if there is  a  gradient  across  the
    image  which  has not been removed in a background subtraction step.
    This  implementation  of  the  algorithm  uses  FFTs  for  efficient 
    computations,  but  FFTs  assume  that the data is cyclic.  A strong
    source at  the  image  boundary  will  introduce  artifacts  at  the
    opposite  side  of  the  image  unless  the  array size is increased
    somewhat,  typically  by  at  least  half  the  size  of  the   PSF. 
    Extending  the  image  also  allows  for  better restorations when a
    strong source is located just outside the  image  boundary,  but  is
    visible  via  the  edge  of  its PSF.  The output image size may be
    modified from the input image size by entering the X and Y values in
    the boxes on the widget.
    
    The  PSF  will  be  properly  normalized  and   centered   for   the 
    computation.  If you extract the PSF from observed data, make sure 
    it has been corrected for any pixel defects and has any background 
    removed.  Any mismatches between the PSF and the  actual  data  will
    propagate  into the restored image as artifacts.  If the PSF has any
    negative data values, these will be truncated at zero prior  to  use
    in the restoration iteration.
    
    The  iterations  may  be  resumed from where they were left off on a
    previous run of the program.  Use the continue option to start the
    deconvolution process where the previous run ended.  You may also
    enter a Model image on the load data form.

    The widget contains menu buttons across the top of the widget, three
    graphics windows, and several parameter windows.  The graphics windows
    display the original data (rebinned to 256 by 256 pixels if larger),
    a plot of Chi-Square as a function of iteration, and the resultant
    restored image at the completion of each iteration.  If the resultant
    image dimensions are 256 by 256 the displayed image is zoomed by a
    factor of 2.  Otherwise the image is displayed at its resolution.

    The parameters entered in the widget are:

    Read Noise
        Additive  Gaussian  noise,   or   read-out   noise,   given   in 
        electrons.  
    
    Electrons/DN 
        Conversion constant from electrons or photons  to  data  numbers
        (analog  to  digital  unit).   Also known as the gain for a CCD.
    
    Iterations 
        Maximum  number  of  iterations  to be performed. The default
        is 25.  Execution will halt before reaching  this  limit if
        convergence is reached, i.e., (Chi-Sq <= Limit Chi-Sq).
    
    Limit Chi-Sq 
        Value  of  chi-squared  acceptable  for  convergence (optional).
        The default is 1.0. If chi-squared is  less  than  or  equal  to
        Limit Chi-Sq, iterations stop regardless of the value of 
	Iterations.
    
    Output Image Size
        The  size  of  the  output  image in pixels.  The default is
	the size of the input image.


    The eight menus at the top of the widget include:  FILE, COLOR, SCALE,
    Deconvolve, Damp, Continue, Help, and Quit. (Quit appears twice  
    in both the FILE menu and the Quit button.  Each menu or button
    is described below in the order they appear above.

     FILE contains four sub-menus:
  
        LOAD - brings up a form to load the required and optional images:

          raw image [required]
	    Name of the input image of blurred data.

          PSF [required]
	    Name of the PSF image.  Dimensionality must match that of the
	    input image, although the number of pixels per data axis may
	    be larger or smaller than the input image.
	  
	  model [optional]
            Name  of  the model image.  To resume iterations from a previous
            result, set  the  model  image  name  to  the  previous saved
            resultant image name, which will then be used as the first guess.
            If no model image is specified, the first estimate is  an  image
            with  all pixel values equal to the image mean value.  The model
            image  can  also  be  from  another  observation,  but  must  be 
            properly registered with the input image.
    
          background [optional]
            Name  of  a  background image which has been subtracted from the
            input image.  If a background has been subtracted from the input  
            image  it  should be specified here in order for the restoration
            to compute the image statistics properly.

         weight [optional]
            Name of an input weight image which  determines  the  weight  of
            each  pixel  during the restoration.  If the flat_field response
            varies across the chip,  the  noise  does  also.   This  can  be
            handled  in  calibrated  data  where  the  flat  field  has been
            applied by inputting the flat field used in calibration  as  the
            weight image.  Beware that weight is a multiplicative image.  In
            In  cases  where  long and short exposure images are combined to
            correct for saturated pixels, the relative pixel weight can be 
            adjusted to be proportional to the relative exposure time for each 
            pixel.  The weight image is independent of the mask image.
    
         mask [optional]
            Name  of an input mask image which flags bad pixels in the input
            image (optional).  The mask is assumed to  be  binary--- with
            '0's to denote bad pixels and '1's to denote good pixels.


	Print - reads the resultant display window, creates a postscript
	 file (IDL.PS), and spawns the file to the default printer.

        Save - saves the restored image in FITS format.

        Quit - Quits the NICLOOK widget.

     COLOR  brings up the XLOADCT widget in IDL to allow the user
	to change the color table and dynamic range of the display.

     SCALE contains two sub-menus:

         Linear     - Scales both images (original and restored) linearly 
		      and redisplays them.

         Log base 10 -Scales both images (original and restored) by Log base
		      10 and redisplays them.  
     
     Deconvolve contains three sub-menus:

	 original - deconvolves using the Richardson-Lucy algorithm
	 (unaccelerated).

	 standard acceleration - deconvolves using the accelerated iteration
	 algorithm as defined by Hook and Lucy (1992, in Science with the 
	 Hubble Space Telescope).

	 turbo acceleration - deconvolves using the algorithm developed by
	 Rick White.  The turbo method uses a conjugate gradient approach
	 to modify the search directions from the standard Lucy method in
	 order to speed convergence.

     Damp contains two sub-menus:

	 No - do not apply damping.

	 Yes - apply damping during the iterative process.   

     Help opens this text widget.

     Quit exits the XDISPLAY widget.


  References:

    Hook, R.N., Lucy, L.B. 1992, in Science with the Hubble Space Telescope,
     eds. P.Benvenuti & E. Schreier (Garching: ESO), 245

    Lucy, L.B. 1974, AJ, 79, 745

    Richardson, W.H. 1972, J. Opt. Soc. Am. 62, 55

    Shepp, L.S., Vardi, Y. 1982, IEEE Trans. Medical Imaging M1-1, 113

    Snyder, D. 1990, in the Restoration of HST Images and Spectra, eds.

     R.L. White & R.J. Allen, Space Telescope Science Institute, 56

    White, R.L. 1993, in Astronomical Data Analysis Software and Systems III,
     eds. Dennis R. Crabtree, R.J. Hanisch, & Jeanette Barnes, Astronomical
     Society of the Pacific Conference Series Volume 61, 292-295
